{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport axios from \"axios\";\n\nconst useHttp = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await axios({\n        url: requestConfig.url,\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        data: requestConfig.body ? requestConfig.body : null,\n        headers: requestConfig.headers ? requestConfig.headers : null\n      });\n\n      if (!response.data) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response;\n      applyData(data);\n    } catch (err) {\n      console.log(err);\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 0);\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/krisbachan/Desktop/hackathonProjects/Quoted/flexaday/src/hooks/useHttp.js"],"names":["useState","useCallback","axios","useHttp","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyData","response","url","method","data","body","headers","Error","err","console","log","message","setTimeout"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMQ,WAAW,GAAGP,WAAW,CAAC,OAAOQ,aAAP,EAAsBC,SAAtB,KAAoC;AAClEL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMT,KAAK,CAAC;AAC3BU,QAAAA,GAAG,EAAEH,aAAa,CAACG,GADQ;AAE3BC,QAAAA,MAAM,EAAEJ,aAAa,CAACI,MAAd,GAAuBJ,aAAa,CAACI,MAArC,GAA8C,KAF3B;AAG3BC,QAAAA,IAAI,EAAEL,aAAa,CAACM,IAAd,GAAqBN,aAAa,CAACM,IAAnC,GAA0C,IAHrB;AAI3BC,QAAAA,OAAO,EAAEP,aAAa,CAACO,OAAd,GAAwBP,aAAa,CAACO,OAAtC,GAAgD;AAJ9B,OAAD,CAA5B;;AAOA,UAAI,CAACL,QAAQ,CAACG,IAAd,EAAoB;AAClB,cAAM,IAAIG,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMH,IAAI,GAAG,MAAMH,QAAnB;AACAD,MAAAA,SAAS,CAACI,IAAD,CAAT;AACD,KAdD,CAcE,OAAOI,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAX,MAAAA,QAAQ,CAACW,GAAG,CAACG,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDC,IAAAA,UAAU,CAAC,MAAM;AACfjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFS,EAEP,CAFO,CAAV;AAGD,GAxB8B,EAwB5B,EAxB4B,CAA/B;AA0BA,SAAO;AACLD,IAAAA,SADK;AAELE,IAAAA,KAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CAnCD;;GAAML,O;;AAqCN,eAAeA,OAAf","sourcesContent":["import { useState, useCallback } from \"react\";\nimport axios from \"axios\";\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios({\n        url: requestConfig.url,\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        data: requestConfig.body ? requestConfig.body : null,\n        headers: requestConfig.headers ? requestConfig.headers : null,\n      });\n\n      if (!response.data) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response;\n      applyData(data);\n    } catch (err) {\n      console.log(err);\n      setError(err.message || \"Something went wrong!\");\n    }\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 0);\n  }, []);\n\n  return {\n    isLoading,\n    error,\n    sendRequest,\n  };\n};\n\nexport default useHttp;\n"]},"metadata":{},"sourceType":"module"}