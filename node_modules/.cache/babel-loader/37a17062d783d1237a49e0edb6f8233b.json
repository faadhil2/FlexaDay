{"ast":null,"code":"var _jsxFileName = \"/Users/krisbachan/Desktop/hackathonProjects/Quoted/flexaday/src/Components/ExerciseInfo/ExerciseInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./ExerciseInfo.css\";\nimport useHttp from \"../../hooks/useHttp\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExerciseInfo = ({\n  type = \"chest\"\n}) => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest\n  } = useHttp();\n  const [exerciseInfo, setExersiceInfo] = useState({});\n\n  const transformData = res => {\n    const workout = res.data[Math.floor(Math.random() * 163)];\n\n    const workoutElement = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          minWidth: 275\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Current Challenge:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"div\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Complete 3 x 12 (sets and reps) of the \", workout.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mb: 1.5\n            },\n            color: \"text.secondary\",\n            children: \"adjective\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"well meaning and kindly.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), '\"a benevolent smile\"']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            children: \"Learn More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, 12, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n\n    setExersiceInfo(workoutElement);\n  };\n\n  useEffect(() => {\n    const options = {\n      method: \"GET\",\n      url: \"https://exercisedb.p.rapidapi.com/exercises/bodyPart/chest\",\n      headers: {\n        \"x-rapidapi-host\": \"exercisedb.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"cc171d6d0amsh83b032c770272cdp142742jsn8fbf093b0592\"\n      }\n    };\n    sendRequest(options, transformData);\n  }, []);\n  return !isLoading && error && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 29\n  }, this) || !error && !isLoading && !Object.keys(exerciseInfo).length && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No data found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this) || !error && !isLoading && exerciseInfo && typeof exerciseInfo === \"object\" && Object.keys(exerciseInfo).length && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: exerciseInfo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 43\n  }, this);\n};\n\n_s(ExerciseInfo, \"R30rFXevIA4tDeS2syFo/fGih64=\", false, function () {\n  return [useHttp];\n});\n\n_c = ExerciseInfo;\nexport default ExerciseInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseInfo\");","map":{"version":3,"sources":["/Users/krisbachan/Desktop/hackathonProjects/Quoted/flexaday/src/Components/ExerciseInfo/ExerciseInfo.jsx"],"names":["React","useEffect","useState","useHttp","Card","CardActions","CardContent","Button","Typography","ExerciseInfo","type","isLoading","error","sendRequest","exerciseInfo","setExersiceInfo","transformData","res","workout","data","Math","floor","random","workoutElement","minWidth","name","mb","options","method","url","headers","Object","keys","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,oBAAP;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG;AAAT,CAAD,KAAwB;AAAA;;AAC3C,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAAoCV,OAAO,EAAjD;AAEA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMc,aAAa,GAAIC,GAAD,IAAS;AAC7B,UAAMC,OAAO,GAAGD,GAAG,CAACE,IAAJ,CAASC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAT,CAAhB;;AACA,UAAMC,cAAc,gBAClB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAV;AAAA,gCACE,QAAC,WAAD;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,SAAS,EAAC,KAAnC;AAAA,mCACE;AAAA,oEAA8CN,OAAO,CAACO,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAHF,eAME,QAAC,UAAD;AAAY,YAAA,EAAE,EAAE;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAAhB;AAA6B,YAAA,KAAK,EAAC,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eASE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAAA,gEAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGG,sBAHH;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE,QAAC,WAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAqBE;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA,OAAU,EAAV;AAAA;AAAA;AAAA;AAAA,YADF;;AA0BAX,IAAAA,eAAe,CAACQ,cAAD,CAAf;AACD,GA7BD;;AA+BAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,GAAG,EAAE,4DAFS;AAGdC,MAAAA,OAAO,EAAE;AACP,2BAAmB,2BADZ;AAEP,0BAAkB;AAFX;AAHK,KAAhB;AAQAjB,IAAAA,WAAW,CAACc,OAAD,EAAUX,aAAV,CAAX;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,SACG,CAACL,SAAD,IAAcC,KAAd,iBAAuB;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UAAxB,IACC,CAACA,KAAD,IAAU,CAACD,SAAX,IAAwB,CAACoB,MAAM,CAACC,IAAP,CAAYlB,YAAZ,EAA0BmB,MAAnD,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,IAIC,CAACrB,KAAD,IACC,CAACD,SADF,IAECG,YAFD,IAGC,OAAOA,YAAP,KAAwB,QAHzB,IAICiB,MAAM,CAACC,IAAP,CAAYlB,YAAZ,EAA0BmB,MAJ3B,iBAIqC;AAAA,cAAMnB;AAAN;AAAA;AAAA;AAAA;AAAA,UATxC;AAWD,CA3DD;;GAAML,Y;UACsCN,O;;;KADtCM,Y;AA6DN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport \"./ExerciseInfo.css\";\n\nimport useHttp from \"../../hooks/useHttp\";\n\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\nconst ExerciseInfo = ({ type = \"chest\" }) => {\n  const { isLoading, error, sendRequest } = useHttp();\n\n  const [exerciseInfo, setExersiceInfo] = useState({});\n\n  const transformData = (res) => {\n    const workout = res.data[Math.floor(Math.random() * 163)];\n    const workoutElement = (\n      <div key={12}>\n        <Card sx={{ minWidth: 275 }}>\n          <CardContent>\n            <h1>Current Challenge:</h1>\n\n            <Typography variant=\"h5\" component=\"div\">\n              <span>Complete 3 x 12 (sets and reps) of the {workout.name}</span>\n            </Typography>\n            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n              adjective\n            </Typography>\n            <Typography variant=\"body2\">\n              well meaning and kindly.\n              <br />\n              {'\"a benevolent smile\"'}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button size=\"small\">Learn More</Button>\n          </CardActions>\n        </Card>\n        <p></p>\n      </div>\n    );\n\n    setExersiceInfo(workoutElement);\n  };\n\n  useEffect(() => {\n    const options = {\n      method: \"GET\",\n      url: \"https://exercisedb.p.rapidapi.com/exercises/bodyPart/chest\",\n      headers: {\n        \"x-rapidapi-host\": \"exercisedb.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"cc171d6d0amsh83b032c770272cdp142742jsn8fbf093b0592\",\n      },\n    };\n    sendRequest(options, transformData);\n  }, []);\n\n  return (\n    (!isLoading && error && <div>{error}</div>) ||\n    (!error && !isLoading && !Object.keys(exerciseInfo).length && (\n      <div>No data found</div>\n    )) ||\n    (!error &&\n      !isLoading &&\n      exerciseInfo &&\n      typeof exerciseInfo === \"object\" &&\n      Object.keys(exerciseInfo).length && <div>{exerciseInfo}</div>)\n  );\n};\n\nexport default ExerciseInfo;\n"]},"metadata":{},"sourceType":"module"}